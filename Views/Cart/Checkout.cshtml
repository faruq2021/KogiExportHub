@model KogiExportHub.Models.CheckoutViewModel
@{
    ViewData["Title"] = "Checkout";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h4>Checkout</h4>
                </div>
                <div class="card-body">
                    <form id="checkout-form">
                        @Html.AntiForgeryToken()
                        
                        <!-- Delivery Information -->
                        <div class="mb-4">
                            <h5>Delivery Information</h5>
                            <div class="mb-3">
                                <label for="deliveryAddress" class="form-label">Delivery Address *</label>
                                <textarea class="form-control" id="deliveryAddress" name="deliveryAddress" rows="3" required></textarea>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <label for="city" class="form-label">City</label>
                                    <input type="text" class="form-control" id="city" name="city">
                                </div>
                                <div class="col-md-6">
                                    <label for="phoneNumber" class="form-label">Phone Number *</label>
                                    <input type="tel" class="form-control" id="phoneNumber" name="phoneNumber" required>
                                </div>
                            </div>
                            <div class="mt-3">
                                <label for="specialInstructions" class="form-label">Special Instructions</label>
                                <textarea class="form-control" id="specialInstructions" name="specialInstructions" rows="2"></textarea>
                            </div>
                        </div>

                        <!-- Payment Button -->
                        <button id="pay-button" type="button" class="btn btn-primary btn-lg w-100">
                            <span id="button-text">Pay ₦@Model.Cart.Total.ToString("N2")</span>
                            <div id="spinner" class="spinner-border spinner-border-sm d-none" role="status"></div>
                        </button>
                    </form>
                </div>
            </div>
        </div>
        
        <div class="container mt-4">
            <div class="row">
                <!-- Order Summary - Show first on mobile -->
                <div class="col-md-4 order-md-2 mb-4">
                    <div class="card">
                        <div class="card-header">
                            <h5>Order Summary</h5>
                        </div>
                        <div class="card-body">
                            @foreach (var item in Model.Cart.Items)
                            {
                                <div class="d-flex justify-content-between mb-2">
                                    <span>@item.ProductName x @item.Quantity</span>
                                    <span>₦@item.TotalPrice.ToString("N2")</span>
                                </div>
                            }
                            <hr>
                            <div class="d-flex justify-content-between fw-bold">
                                <span>Total:</span>
                                <span>₦@Model.Cart.Total.ToString("N2")</span>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Checkout Form -->
                <div class="col-md-8 order-md-1">
                    <div class="card">
                        <div class="card-header">
                            <h4>Checkout</h4>
                        </div>
                        <div class="card-body">
                            <!-- Form content remains the same -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    async function processPayment() {
        try {
            setLoading(true);
            const response = await fetch('/Payment/InitializePayment', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                }
            });
        
            const result = await response.json();
        
            if (result.success) {
                // Redirect to Flutterwave payment page
                window.location.href = result.paymentLink;
            } else {
                alert('Payment initialization failed: ' + result.error);
                setLoading(false);
            }
        } catch (error) {
            console.error('Error:', error);
            alert('An error occurred while processing payment.');
            setLoading(false);
        }
    }

    function setLoading(isLoading) {
        const button = document.querySelector('#pay-button');
        const spinner = document.querySelector('#spinner');
        const buttonText = document.querySelector('#button-text');
        
        if (isLoading) {
            button.disabled = true;
            spinner.classList.remove('d-none');
            buttonText.classList.add('d-none');
        } else {
            button.disabled = false;
            spinner.classList.add('d-none');
            buttonText.classList.remove('d-none');
        }
    }

    document.addEventListener('DOMContentLoaded', function() {
        document.querySelector('#pay-button').addEventListener('click', processPayment);
    });
</script>

<style>
    .hidden, .d-none {
        display: none !important;
    }
</style>

<!-- Add this CSS and JavaScript for loading states -->
<style>
.payment-loading {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.7);
    z-index: 9999;
}

.loading-content {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: white;
    padding: 30px;
    border-radius: 10px;
    text-align: center;
}

.spinner {
    border: 4px solid #f3f3f3;
    border-top: 4px solid #3498db;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    animation: spin 2s linear infinite;
    margin: 0 auto 20px;
}

@@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}
</style>

<!-- Add loading overlay -->
<div id="paymentLoading" class="payment-loading">
    <div class="loading-content">
        <div class="spinner"></div>
        <h4>Processing Payment...</h4>
        <p>Please wait while we process your payment. Do not close this window.</p>
    </div>
</div>

<!-- Update the payment form -->
<script>
function showPaymentLoading() {
    document.getElementById('paymentLoading').style.display = 'block';
}

function hidePaymentLoading() {
    document.getElementById('paymentLoading').style.display = 'none';
}

// Add to the payment button click event
document.addEventListener('DOMContentLoaded', function() {
    const paymentForm = document.querySelector('form[action*="InitializePayment"]');
    if (paymentForm) {
        paymentForm.addEventListener('submit', function() {
            showPaymentLoading();
        });
    }
});
</script>